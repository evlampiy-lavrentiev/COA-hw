// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app/worker/types/anek.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Anek struct {
	Str                  string            `protobuf:"bytes,1,opt,name=Str,proto3" json:"Str,omitempty"`
	Int                  int64             `protobuf:"varint,2,opt,name=Int,proto3" json:"Int,omitempty"`
	Arr                  []int64           `protobuf:"varint,3,rep,packed,name=Arr,proto3" json:"Arr,omitempty"`
	Dict                 map[string]string `protobuf:"bytes,4,rep,name=Dict,proto3" json:"Dict,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Float                float64           `protobuf:"fixed64,5,opt,name=Float,proto3" json:"Float,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Anek) Reset()         { *m = Anek{} }
func (m *Anek) String() string { return proto.CompactTextString(m) }
func (*Anek) ProtoMessage()    {}
func (*Anek) Descriptor() ([]byte, []int) {
	return fileDescriptor_58d0ccb58a946f65, []int{0}
}

func (m *Anek) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Anek.Unmarshal(m, b)
}
func (m *Anek) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Anek.Marshal(b, m, deterministic)
}
func (m *Anek) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Anek.Merge(m, src)
}
func (m *Anek) XXX_Size() int {
	return xxx_messageInfo_Anek.Size(m)
}
func (m *Anek) XXX_DiscardUnknown() {
	xxx_messageInfo_Anek.DiscardUnknown(m)
}

var xxx_messageInfo_Anek proto.InternalMessageInfo

func (m *Anek) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

func (m *Anek) GetInt() int64 {
	if m != nil {
		return m.Int
	}
	return 0
}

func (m *Anek) GetArr() []int64 {
	if m != nil {
		return m.Arr
	}
	return nil
}

func (m *Anek) GetDict() map[string]string {
	if m != nil {
		return m.Dict
	}
	return nil
}

func (m *Anek) GetFloat() float64 {
	if m != nil {
		return m.Float
	}
	return 0
}

func init() {
	proto.RegisterType((*Anek)(nil), "Anek")
	proto.RegisterMapType((map[string]string)(nil), "Anek.DictEntry")
}

func init() { proto.RegisterFile("app/worker/types/anek.proto", fileDescriptor_58d0ccb58a946f65) }

var fileDescriptor_58d0ccb58a946f65 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4e, 0x2c, 0x28, 0xd0,
	0x2f, 0xcf, 0x2f, 0xca, 0x4e, 0x2d, 0xd2, 0x2f, 0xa9, 0x2c, 0x48, 0x2d, 0xd6, 0x4f, 0xcc, 0x4b,
	0xcd, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xda, 0xc0, 0xc8, 0xc5, 0xe2, 0x98, 0x97, 0x9a,
	0x2d, 0x24, 0xc0, 0xc5, 0x1c, 0x5c, 0x52, 0x24, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0x62,
	0x82, 0x44, 0x3c, 0xf3, 0x4a, 0x24, 0x98, 0x14, 0x18, 0x35, 0x98, 0x83, 0x40, 0x4c, 0x90, 0x88,
	0x63, 0x51, 0x91, 0x04, 0xb3, 0x02, 0x33, 0x48, 0xc4, 0xb1, 0xa8, 0x48, 0x48, 0x99, 0x8b, 0xc5,
	0x25, 0x33, 0xb9, 0x44, 0x82, 0x45, 0x81, 0x59, 0x83, 0xdb, 0x88, 0x5f, 0x0f, 0x64, 0x94, 0x1e,
	0x48, 0xc4, 0x35, 0xaf, 0xa4, 0xa8, 0x32, 0x08, 0x2c, 0x29, 0x24, 0xc2, 0xc5, 0xea, 0x96, 0x93,
	0x9f, 0x58, 0x22, 0xc1, 0xaa, 0xc0, 0xa8, 0xc1, 0x18, 0x04, 0xe1, 0x48, 0x99, 0x73, 0x71, 0xc2,
	0x15, 0x82, 0x4c, 0xce, 0x4e, 0xad, 0x84, 0xd9, 0x9e, 0x9d, 0x5a, 0x09, 0xd2, 0x54, 0x96, 0x98,
	0x53, 0x9a, 0x0a, 0xb6, 0x9f, 0x33, 0x08, 0xc2, 0xb1, 0x62, 0xb2, 0x60, 0x74, 0x62, 0x8b, 0x62,
	0xd1, 0xb3, 0x2e, 0x48, 0x4a, 0x62, 0x03, 0xfb, 0xc0, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xee,
	0x7e, 0x0f, 0x06, 0xe0, 0x00, 0x00, 0x00,
}
